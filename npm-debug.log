0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@3.3.12
3 info using node@v5.5.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/mayorov/workspace/test/rtts-ts',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/mayorov/.npm/rtts-ts/0.1.0/package.tgz not in flight; packing
9 info lifecycle rtts-ts@0.1.0~prepublish: rtts-ts@0.1.0
10 silly lifecycle rtts-ts@0.1.0~prepublish: no script for prepublish, continuing
11 verbose tar pack [ '/Users/mayorov/.npm/rtts-ts/0.1.0/package.tgz',
11 verbose tar pack   '/Users/mayorov/workspace/test/rtts-ts' ]
12 verbose tarball /Users/mayorov/.npm/rtts-ts/0.1.0/package.tgz
13 verbose folder /Users/mayorov/workspace/test/rtts-ts
14 verbose addLocalTarball adding from inside cache /Users/mayorov/.npm/rtts-ts/0.1.0/package.tgz
15 silly cache afterAdd rtts-ts@0.1.0
16 verbose afterAdd /Users/mayorov/.npm/rtts-ts/0.1.0/package/package.json not in flight; writing
17 verbose afterAdd /Users/mayorov/.npm/rtts-ts/0.1.0/package/package.json written
18 silly publish { name: 'rtts-ts',
18 silly publish   version: '0.1.0',
18 silly publish   description: 'A runtime type system library for TypeScript',
18 silly publish   main: 'index.js',
18 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
18 silly publish   repository: { type: 'git', url: 'git+https://github.com/i0z/rtts-ts.git' },
18 silly publish   keywords: [ 'rtts', 'runtime', 'types' ],
18 silly publish   author: { name: 'Alexander Mayorov' },
18 silly publish   license: 'ISC',
18 silly publish   bugs: { url: 'https://github.com/i0z/rtts-ts/issues' },
18 silly publish   homepage: 'https://github.com/i0z/rtts-ts#readme',
18 silly publish   readme: '#RTTS-TS\nLibrary of TypeScript decorators for RunTime Type System with decorators type annotations\n\n# Type Annotations\nNominal types were originally proposed for JavaScript in the ECMAScript 4 specification. Though this was never implemented in JavaScript, it was adopted and widely used via Adobe\'s ActionScript3 and inspired others. e.g. TypeScript adopted the syntax, but uses a structural type system semantic.\n\nTypes allow us to explicitly express contracts between different parts of the system and to give these contracts names. For large teams with large codebases, where no single person knows the whole codebase, types become a key way to discuss and reason about the collaboration between different components of the system.\n\n## RunTime Type System (RTTS library)\nTypeScript type annotations check only in compilation time. Uf you would like to check types in runtime, you should add some logic for check types.\n\nMy proposal is to use this previously vetted syntax by using a decorators as type declaration before the variable, parameter or function as seen below. It check type in runtime. When we have annotations, itâ€™s important to provide a consistent API that developers and frameworks can leverage to gain access to this information at runtime.\n\n## Motivation to use a runtime type system\nIt allows free mixing of existing libraries which do not have type annotations with new code which can take advantage of types. The incomplete type information would prevent useful static analysis of code but runtime type checks do not suffer from such limitations.\n\nThe semantics of types can be left to the implementor of the rtts library. This means that different libraries can choose different strategies of identifying types. e.g. nominal vs structural. Our hope is that developers will be able to experiment with new ways of using types.\n\nRuntime type verification can be used to verify that the JSON returned from the server is of a valid structure, something which cannot be done statically.\n\nSince the type errors should be caught and resolved before pushing the code to production, all of the assertions can be stripped from production builds, completely removing the cost of these assertions.\n\n## Usage Type Annotations\n\n    ///<require path="rtts/typings.d.ts" />\n    import \'rtts\';\n    \n    class SomeClass {\n      @tnumber public  foo :number = 123;\n      @tstring private bar :string = \'abc\';\n      \n      @type add(@tint x :int, @tfloat y :float) :number {\n        return x + y;\n      }\n    }\n    \n    let myFoo = new Foo;\n    myFoo.bar = 123; // Throw TypeError\n    myFoo.add(12.5, 10.1); // TypeError, first argument is not integer\n\n',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: 'b426b666d5f5b8a1893aa20a11e075e9f541fe64',
18 silly publish   _id: 'rtts-ts@0.1.0',
18 silly publish   _shasum: '7546b264e193e361dd530e8c6b79dc266c9e0f45',
18 silly publish   _from: '.' }
19 verbose getPublishConfig undefined
20 silly mapToRegistry name rtts-ts
21 silly mapToRegistry using default registry
22 silly mapToRegistry registry https://registry.npmjs.org/
23 silly mapToRegistry uri https://registry.npmjs.org/rtts-ts
24 verbose publish registryBase https://registry.npmjs.org/
25 silly publish uploading /Users/mayorov/.npm/rtts-ts/0.1.0/package.tgz
26 verbose request uri https://registry.npmjs.org/rtts-ts
27 verbose request sending authorization for write operation
28 info attempt registry request try #1 at 20:50:46
29 verbose request using bearer token for auth
30 verbose request id 96e27ae0d6594102
31 http request PUT https://registry.npmjs.org/rtts-ts
32 http 403 https://registry.npmjs.org/rtts-ts
33 verbose headers { 'content-type': 'application/json',
33 verbose headers   'cache-control': 'max-age=300',
33 verbose headers   'content-length': '95',
33 verbose headers   'accept-ranges': 'bytes',
33 verbose headers   date: 'Mon, 25 Jan 2016 17:50:47 GMT',
33 verbose headers   via: '1.1 varnish',
33 verbose headers   connection: 'keep-alive',
33 verbose headers   'x-served-by': 'cache-fra1235-FRA',
33 verbose headers   'x-cache': 'MISS',
33 verbose headers   'x-cache-hits': '0',
33 verbose headers   'x-timer': 'S1453744246.159143,VS0,VE1178' }
34 verbose request invalidating /Users/mayorov/.npm/registry.npmjs.org/rtts-ts on PUT
35 error publish Failed PUT 403
36 verbose stack Error: "You cannot publish over the previously published version 0.1.0." : rtts-ts
36 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
36 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
36 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
36 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:198:22)
36 verbose stack     at emitTwo (events.js:100:13)
36 verbose stack     at Request.emit (events.js:185:7)
36 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1082:10)
36 verbose stack     at emitOne (events.js:95:20)
36 verbose stack     at Request.emit (events.js:182:7)
36 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1009:12)
37 verbose statusCode 403
38 verbose pkgid rtts-ts
39 verbose cwd /Users/mayorov/workspace/test/rtts-ts
40 error Darwin 15.2.0
41 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
42 error node v5.5.0
43 error npm  v3.3.12
44 error code E403
45 error "You cannot publish over the previously published version 0.1.0." : rtts-ts
46 error If you need help, you may report this error at:
46 error     <https://github.com/npm/npm/issues>
47 verbose exit [ 1, true ]
